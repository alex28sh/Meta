/home/aleksandr/Meta/examples/mix.frt
C Program [C cons [ C ReadI [ C var [C Program []] ], C cons [ C ReadI [ C var [C Division []] ], C cons [ C ReadI [ C var [C Vs0 []] ], C nil [] ] ] ], C cons [ C Block [ C init [], C cons [ C Assign [ C var [C marked []], C nil [  ] ], C cons [ C Assign [ C var [C NewBlocks []], C nil [  ] ], C cons [ C Assign [ C var [C NewReads []], C nil [  ] ], C nil [] ] ] ], C Match [ C var [C Program []], C Program [ C var [C Reads []], C var [C Blocks []] ], C loopReads [], C ErrPattern [] ] ], C cons [ C Block [ C loopReads [], C nil [], C Match [ C var [C Reads []], C cons [ C var [C curRead []], C var [C ReadsTail []] ], C loopReads1 [], C initDone [] ] ], C cons [ C Block [ C loopReads1 [], C nil [], C Match [ C var [C curRead []], C ReadI [ C var [C readVar []] ], C loopReads3 [], C ErrPattern [] ] ], C cons [ C Block [ C loopReads3 [], C cons [ C Assign [ C var [C Reads []], C var [C ReadsTail []] ], C nil [] ], C If [ C Eq [], C Call [ C is_static [], C var [C Division []], C var [C readVar []] ], C True [  ], C loopReads [], C loopReadsNotFound [] ] ], C cons [ C Block [ C loopReadsNotFound [], C cons [ C Assign [ C var [C NewReads []], C cons [ C ReadI [ C var [C readVar []] ], C var [C NewReads []] ] ], C nil [] ], C Goto [ C loopReads [] ] ], C cons [ C Block [ C initDone [], C nil [], C Match [ C var [C Blocks []], C cons [ C var [C Block []], C var [C _ []] ], C initDone1 [], C stop [] ] ], C cons [ C Block [ C initDone1 [], C nil [], C Match [ C var [C Block []], C Block [ C var [C lab0 []], C var [C _ []], C var [C _ []] ], C initDone2 [], C ErrPattern [] ] ], C cons [ C Block [ C initDone2 [], C cons [ C Assign [ C var [C pending []], C cons [ C Pair [ C var [C lab0 []], C var [C Vs0 []] ], C nil [  ] ] ], C nil [] ], C Goto [ C loopPending [] ] ], C cons [ C Block [ C loopPending [], C nil [], C Match [ C var [C pending []], C cons [ C var [C CurState []], C var [C rest []] ], C loopPending1 [], C stop [] ] ], C cons [ C Block [ C loopPending1 [], C cons [ C Assign [ C var [C pending []], C var [C rest []] ], C nil [] ], C Match [ C var [C CurState []], C Pair [ C var [C pp []], C var [C vs []] ], C loopPending2_0 [], C ErrPattern [] ] ], C cons [ C Block [ C loopPending2_0 [], C cons [ C Assign [ C var [C CurList []], C var [C marked []] ], C cons [ C Assign [ C var [C CurFind []], C Pair [ C var [C pp []], C var [C vs []] ] ], C cons [ C Assign [ C var [C CurRa []], C loopPending2_1 [  ] ], C nil [] ] ] ], C Goto [ C lookup [] ] ], C cons [ C Block [ C loopPending2_1 [], C nil [], C If [ C Eq [], C var [C found []], C True [  ], C loopPending [], C loopPending2 [] ] ], C cons [ C Block [ C loopPending2 [], C cons [ C Assign [ C var [C marked []], C cons [ C Pair [ C var [C pp []], C var [C vs []] ], C var [C marked []] ] ], C cons [ C Assign [ C var [C CurListBlock []], C var [C Blocks []] ], C cons [ C Assign [ C var [C CurFindBlock []], C var [C pp []] ], C cons [ C Assign [ C var [C CurRaBlock []], C loopPending3 [  ] ], C nil [] ] ] ] ], C Goto [ C lookupBlock [] ] ], C cons [ C Block [ C loopPending3 [], C cons [ C Assign [ C var [C code []], C Call [ C initial_code [], C var [C pp []], C var [C vs []] ] ], C nil [] ], C Goto [ C loopBB [] ] ], C cons [ C Block [ C loopBB [], C nil [], C Match [ C var [C assigns []], C cons [ C var [C curAssign []], C var [C restAssigns []] ], C loopBB_ [], C processJump [] ] ], C cons [ C Block [ C processJump [], C nil [], C Match [ C var [C jump []], C Goto [ C var [C GotoLab []] ], C processGoto [], C processJump1 [] ] ], C cons [ C Block [ C processJump1 [], C nil [], C Match [ C var [C jump []], C If [ C var [C op []], C var [C el []], C var [C er []], C var [C l []], C var [C r []] ], C processIf [], C processJump2 [] ] ], C cons [ C Block [ C processJump2 [], C nil [], C Match [ C var [C jump []], C Match [ C var [C v []], C var [C e []], C var [C l []], C var [C r []] ], C processMatch [], C processJump3 [] ] ], C cons [ C Block [ C processJump3 [], C nil [], C Match [ C var [C jump []], C Return [ C var [C expr []] ], C processReturn [], C ErrPattern [] ] ], C cons [ C Block [ C processGoto [], C cons [ C Assign [ C var [C CurListBlock []], C var [C Blocks []] ], C cons [ C Assign [ C var [C CurFindBlock []], C var [C GotoLab []] ], C cons [ C Assign [ C var [C CurRaBlock []], C loopBB [  ] ], C nil [] ] ] ], C Goto [ C lookupBlock [] ] ], C cons [ C Block [ C processIf [], C cons [ C Assign [ C var [C vl []], C Call [ C reduce [], C var [C el []], C var [C vs []] ] ], C cons [ C Assign [ C var [C vr []], C Call [ C reduce [], C var [C er []], C var [C vs []] ] ], C nil [] ] ], C If [ C Eq [], C True [  ], C Call [ C is_static [], C var [C Division []], C var [C jump []] ], C processIfStatic [], C processIfDynamic [] ] ], C cons [ C Block [ C processIfStatic [], C nil [], C Match [ C var [C op []], C Eq [  ], C processIfStaticEq [], C processIfStaticNeq [] ] ], C cons [ C Block [ C processIfStaticEq [], C nil [], C If [ C Eq [], C var [C vl []], C var [C vr []], C processIfStaticTrue [], C processIfStaticFalse [] ] ], C cons [ C Block [ C processIfStaticNeq [], C nil [], C If [ C Neq [], C var [C vl []], C var [C vr []], C processIfStaticFalse [], C processIfStaticTrue [] ] ], C cons [ C Block [ C processIfStaticTrue [], C cons [ C Assign [ C var [C GotoLab []], C var [C l []] ], C nil [] ], C Goto [ C processGoto [] ] ], C cons [ C Block [ C processIfStaticFalse [], C cons [ C Assign [ C var [C GotoLab []], C var [C r []] ], C nil [] ], C Goto [ C processGoto [] ] ], C cons [ C Block [ C processIfDynamic [], C cons [ C Assign [ C var [C pending []], C cons [ C Pair [ C var [C l []], C var [C vs []] ], C var [C pending []] ] ], C cons [ C Assign [ C var [C pending []], C cons [ C Pair [ C var [C r []], C var [C vs []] ], C var [C pending []] ] ], C cons [ C Assign [ C var [C code []], C Call [ C extend [], C var [C code []], C If [ C var [C op []], C var [C vl []], C var [C vr []], C Call [ C get_label [], C var [C l []], C var [C vs []] ], C Call [ C get_label [], C var [C r []], C var [C vs []] ] ] ] ], C nil [] ] ] ], C Goto [ C end_pending_loop [] ] ], C cons [ C Block [ C processMatch [], C cons [ C Assign [ C var [C v_val []], C Call [ C reduce [], C var [C v []], C var [C vs []] ] ], C nil [] ], C If [ C Eq [], C True [  ], C Call [ C is_static [], C var [C Division []], C var [C v []] ], C processMatchStatic [], C processMatchDynamic [] ] ], C cons [ C Block [ C processMatchStatic [], C nil [], C If [ C Eq [], C Call [ C match_fits [], C var [C v_val []], C var [C e []], C var [C vs []] ], C True [  ], C processMatchStaticTrue [], C processMatchStaticFalse [] ] ], C cons [ C Block [ C processMatchStaticTrue [], C cons [ C Assign [ C var [C vs []], C Call [ C match_eval [], C var [C v_val []], C var [C e []], C var [C vs []] ] ], C cons [ C Assign [ C var [C GotoLab []], C var [C l []] ], C nil [] ] ], C Goto [ C processGoto [] ] ], C cons [ C Block [ C processMatchStaticFalse [], C cons [ C Assign [ C var [C GotoLab []], C var [C r []] ], C nil [] ], C Goto [ C processGoto [] ] ], C cons [ C Block [ C processMatchDynamic [], C cons [ C Assign [ C var [C pending []], C cons [ C Pair [ C var [C l []], C var [C vs []] ], C var [C pending []] ] ], C cons [ C Assign [ C var [C pending []], C cons [ C Pair [ C var [C r []], C var [C vs []] ], C var [C pending []] ] ], C cons [ C Assign [ C var [C code []], C Call [ C extend [], C var [C code []], C Match [ C var [C v_val []], C var [C e []], C Call [ C get_label [], C var [C l []], C var [C vs []] ], C Call [ C get_label [], C var [C r []], C var [C vs []] ] ] ] ], C nil [] ] ] ], C Goto [ C end_pending_loop [] ] ], C cons [ C Block [ C processReturn [], C cons [ C Assign [ C var [C val []], C Call [ C reduce [], C var [C expr []], C var [C vs []] ] ], C cons [ C Assign [ C var [C code []], C Call [ C extend [], C var [C code []], C Return [ C var [C val []] ] ] ], C nil [] ] ], C Goto [ C end_pending_loop [] ] ], C cons [ C Block [ C loopBB_ [], C cons [ C Assign [ C var [C assigns []], C var [C restAssigns []] ], C nil [] ], C Match [ C var [C curAssign []], C Assign [ C var [C x []], C var [C exprAss []] ], C processAssign [], C ErrPattern [] ] ], C cons [ C Block [ C processAssign [], C nil [], C If [ C Eq [], C Call [ C is_static [], C var [C Division []], C var [C x []] ], C True [  ], C processAssign2 [], C processAssign3 [] ] ], C cons [ C Block [ C processAssign2 [], C cons [ C Assign [ C var [C val []], C Call [ C reduce [], C var [C exprAss []], C var [C vs []] ] ], C cons [ C Assign [ C var [C vs []], C Call [ C update [], C var [C vs []], C var [C x []], C var [C val []] ] ], C nil [] ] ], C Goto [ C loopBB [] ] ], C cons [ C Block [ C processAssign3 [], C cons [ C Assign [ C var [C val []], C Call [ C reduce [], C var [C exprAss []], C var [C vs []] ] ], C cons [ C Assign [ C var [C code []], C Call [ C extend [], C var [C code []], C Assign [ C var [C x []], C var [C val []] ] ] ], C nil [] ] ], C Goto [ C loopBB [] ] ], C cons [ C Block [ C end_pending_loop [], C cons [ C Assign [ C var [C NewBlocks []], C cons [ C var [C code []], C var [C NewBlocks []] ] ], C nil [] ], C Goto [ C loopPending [] ] ], C cons [ C Block [ C lookupBlock [], C nil [], C Match [ C var [C CurListBlock []], C cons [ C var [C CurElemBlock []], C var [C CurListTailBlock []] ], C lookupBlockCheck [], C ErrPattern [] ] ], C cons [ C Block [ C lookupBlockCheck [], C nil [], C Match [ C var [C CurElemBlock []], C Block [ C var [C CurLab []], C var [C assigns []], C var [C jump []] ], C lookupBlockCheck_ [], C ErrPattern [] ] ], C cons [ C Block [ C lookupBlockCheck_ [], C nil [], C If [ C Eq [], C var [C CurLab []], C var [C CurFindBlock []], C lookupBlockReturn [], C lookupBlockNext [] ] ], C cons [ C Block [ C lookupBlockNext [], C cons [ C Assign [ C var [C CurListBlock []], C var [C CurListTailBlock []] ], C nil [] ], C Goto [ C lookupBlock [] ] ], C cons [ C Block [ C lookupBlockReturn [], C nil [], C If [ C Eq [], C var [C CurRaBlock []], C loopPending3 [  ], C loopPending3 [], C lookupBlockReturn1 [] ] ], C cons [ C Block [ C lookupBlockReturn1 [], C nil [], C If [ C Eq [], C var [C CurRaBlock []], C loopBB [  ], C loopBB [], C lookupBlockReturn2 [] ] ], C cons [ C Block [ C lookupBlockReturn2 [], C nil [], C Goto [ C ErrPattern [] ] ], C cons [ C Block [ C lookup [], C nil [], C Match [ C var [C CurList []], C cons [ C var [C CurElem []], C var [C CurListTail []] ], C lookupCheck [], C lookupFailed [] ] ], C cons [ C Block [ C lookupCheck [], C nil [], C If [ C Eq [], C var [C CurFind []], C var [C CurElem []], C lookupSucceed [], C lookupNext [] ] ], C cons [ C Block [ C lookupNext [], C cons [ C Assign [ C var [C CurList []], C var [C CurListTail []] ], C nil [] ], C Goto [ C lookup [] ] ], C cons [ C Block [ C lookupSucceed [], C cons [ C Assign [ C var [C found []], C True [  ] ], C nil [] ], C Goto [ C lookupReturn [] ] ], C cons [ C Block [ C lookupFailed [], C cons [ C Assign [ C var [C found []], C False [  ] ], C nil [] ], C Goto [ C lookupReturn [] ] ], C cons [ C Block [ C lookupReturn [], C nil [], C If [ C Eq [], C var [C CurRa []], C loopPending2_1 [  ], C loopPending2_1 [], C lookupReturn_ [] ] ], C cons [ C Block [ C lookupReturn_ [], C nil [], C Goto [ C ErrPattern [] ] ], C cons [ C Block [ C ErrPattern [], C nil [], C Return [ C ErrPattern [  ] ] ], C cons [ C Block [ C stop [], C nil [], C Return [ C Program [ C var [C NewReads []], C var [C NewBlocks []] ] ] ], C nil [] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ]]
C cons [C lab0 [], C cons [C Block [], C cons [C Program [], C cons [C Reads [], C cons [C curRead [], C cons [C ReadsTail [], C cons [C readVar [], C cons [C NewReads [], C cons [C Blocks [], C cons [C CurListBlock [], C cons [C CurRaBlock [], C cons [C jump [], C cons [C assigns [], C cons [C curAssign [], C cons [C restAssigns [], C cons [C GotoLab [], C cons [C op [], C cons [C el [], C cons [C er [], C cons [C l [], C cons [C r [], C cons [C v [], C cons [C e [], C cons [C expr [], C cons [C x [], C cons [C exprAss [], C cons [C CurElemBlock [], C cons [C CurListTailBlock [], C cons [C CurLab [], C nil []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
C cons [C Pair [C lab0 [], C none []], C cons [C Pair [C Block [], C none []], C cons [C Pair [C Program [], C Program [C cons [ C ReadI [ C var [C Programspec []] ], C cons [ C ReadI [ C var [C Divisionspec []] ], C cons [ C ReadI [ C var [C Vs0spec []] ], C nil [] ] ] ], C cons [ C Block [ C initspec [], C cons [ C Assign [ C var [C markedspec []], C nil [  ] ], C cons [ C Assign [ C var [C NewBlocksspec []], C nil [  ] ], C cons [ C Assign [ C var [C NewReadsspec []], C nil [  ] ], C nil [] ] ] ], C Match [ C var [C Programspec []], C Program [ C var [C Readsspec []], C var [C Blocksspec []] ], C loopReadsspec [], C ErrPatternspec [] ] ], C cons [ C Block [ C loopReadsspec [], C nil [], C Match [ C var [C Readsspec []], C cons [ C var [C curReadspec []], C var [C ReadsTailspec []] ], C loopReads1spec [], C initDonespec [] ] ], C cons [ C Block [ C loopReads1spec [], C nil [], C Match [ C var [C curReadspec []], C ReadI [ C var [C readVarspec []] ], C loopReads3spec [], C ErrPatternspec [] ] ], C cons [ C Block [ C loopReads3spec [], C cons [ C Assign [ C var [C Readsspec []], C var [C ReadsTailspec []] ], C nil [] ], C If [ C Eq [], C Call [ C is_static [], C var [C Divisionspec []], C var [C readVarspec []] ], C True [  ], C loopReadsspec [], C loopReadsNotFoundspec [] ] ], C cons [ C Block [ C loopReadsNotFoundspec [], C cons [ C Assign [ C var [C NewReadsspec []], C cons [ C ReadI [ C var [C readVarspec []] ], C var [C NewReadsspec []] ] ], C nil [] ], C Goto [ C loopReadsspec [] ] ], C cons [ C Block [ C initDonespec [], C nil [], C Match [ C var [C Blocksspec []], C cons [ C var [C Blockspec []], C var [C _spec []] ], C initDone1spec [], C stopspec [] ] ], C cons [ C Block [ C initDone1spec [], C nil [], C Match [ C var [C Blockspec []], C Block [ C var [C lab0spec []], C var [C _spec []], C var [C _spec []] ], C initDone2spec [], C ErrPatternspec [] ] ], C cons [ C Block [ C initDone2spec [], C cons [ C Assign [ C var [C pendingspec []], C cons [ C Pair [ C var [C lab0spec []], C var [C Vs0spec []] ], C nil [  ] ] ], C nil [] ], C Goto [ C loopPendingspec [] ] ], C cons [ C Block [ C loopPendingspec [], C nil [], C Match [ C var [C pendingspec []], C cons [ C var [C CurStatespec []], C var [C restspec []] ], C loopPending1spec [], C stopspec [] ] ], C cons [ C Block [ C loopPending1spec [], C cons [ C Assign [ C var [C pendingspec []], C var [C restspec []] ], C nil [] ], C Match [ C var [C CurStatespec []], C Pair [ C var [C ppspec []], C var [C vsspec []] ], C loopPending2_0spec [], C ErrPatternspec [] ] ], C cons [ C Block [ C loopPending2_0spec [], C cons [ C Assign [ C var [C CurListspec []], C var [C markedspec []] ], C cons [ C Assign [ C var [C CurFindspec []], C Pair [ C var [C ppspec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C CurRaspec []], C loopPending2_1 [  ] ], C nil [] ] ] ], C Goto [ C lookupspec [] ] ], C cons [ C Block [ C loopPending2_1spec [], C nil [], C If [ C Eq [], C var [C foundspec []], C True [  ], C loopPendingspec [], C loopPending2spec [] ] ], C cons [ C Block [ C loopPending2spec [], C cons [ C Assign [ C var [C markedspec []], C cons [ C Pair [ C var [C ppspec []], C var [C vsspec []] ], C var [C markedspec []] ] ], C cons [ C Assign [ C var [C CurListBlockspec []], C var [C Blocksspec []] ], C cons [ C Assign [ C var [C CurFindBlockspec []], C var [C ppspec []] ], C cons [ C Assign [ C var [C CurRaBlockspec []], C loopPending3 [  ] ], C nil [] ] ] ] ], C Goto [ C lookupBlockspec [] ] ], C cons [ C Block [ C loopPending3spec [], C cons [ C Assign [ C var [C codespec []], C Call [ C initial_code [], C var [C ppspec []], C var [C vsspec []] ] ], C nil [] ], C Goto [ C loopBBspec [] ] ], C cons [ C Block [ C loopBBspec [], C nil [], C Match [ C var [C assignsspec []], C cons [ C var [C curAssignspec []], C var [C restAssignsspec []] ], C loopBB_spec [], C processJumpspec [] ] ], C cons [ C Block [ C processJumpspec [], C nil [], C Match [ C var [C jumpspec []], C Goto [ C var [C GotoLabspec []] ], C processGotospec [], C processJump1spec [] ] ], C cons [ C Block [ C processJump1spec [], C nil [], C Match [ C var [C jumpspec []], C If [ C var [C opspec []], C var [C elspec []], C var [C erspec []], C var [C lspec []], C var [C rspec []] ], C processIfspec [], C processJump2spec [] ] ], C cons [ C Block [ C processJump2spec [], C nil [], C Match [ C var [C jumpspec []], C Match [ C var [C vspec []], C var [C espec []], C var [C lspec []], C var [C rspec []] ], C processMatchspec [], C processJump3spec [] ] ], C cons [ C Block [ C processJump3spec [], C nil [], C Match [ C var [C jumpspec []], C Return [ C var [C exprspec []] ], C processReturnspec [], C ErrPatternspec [] ] ], C cons [ C Block [ C processGotospec [], C cons [ C Assign [ C var [C CurListBlockspec []], C var [C Blocksspec []] ], C cons [ C Assign [ C var [C CurFindBlockspec []], C var [C GotoLabspec []] ], C cons [ C Assign [ C var [C CurRaBlockspec []], C loopBB [  ] ], C nil [] ] ] ], C Goto [ C lookupBlockspec [] ] ], C cons [ C Block [ C processIfspec [], C cons [ C Assign [ C var [C vlspec []], C Call [ C reduce [], C var [C elspec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C vrspec []], C Call [ C reduce [], C var [C erspec []], C var [C vsspec []] ] ], C nil [] ] ], C If [ C Eq [], C True [  ], C Call [ C is_static [], C var [C Divisionspec []], C var [C jumpspec []] ], C processIfStaticspec [], C processIfDynamicspec [] ] ], C cons [ C Block [ C processIfStaticspec [], C nil [], C Match [ C var [C opspec []], C Eq [  ], C processIfStaticEqspec [], C processIfStaticNeqspec [] ] ], C cons [ C Block [ C processIfStaticEqspec [], C nil [], C If [ C Eq [], C var [C vlspec []], C var [C vrspec []], C processIfStaticTruespec [], C processIfStaticFalsespec [] ] ], C cons [ C Block [ C processIfStaticNeqspec [], C nil [], C If [ C Neq [], C var [C vlspec []], C var [C vrspec []], C processIfStaticFalsespec [], C processIfStaticTruespec [] ] ], C cons [ C Block [ C processIfStaticTruespec [], C cons [ C Assign [ C var [C GotoLabspec []], C var [C lspec []] ], C nil [] ], C Goto [ C processGotospec [] ] ], C cons [ C Block [ C processIfStaticFalsespec [], C cons [ C Assign [ C var [C GotoLabspec []], C var [C rspec []] ], C nil [] ], C Goto [ C processGotospec [] ] ], C cons [ C Block [ C processIfDynamicspec [], C cons [ C Assign [ C var [C pendingspec []], C cons [ C Pair [ C var [C lspec []], C var [C vsspec []] ], C var [C pendingspec []] ] ], C cons [ C Assign [ C var [C pendingspec []], C cons [ C Pair [ C var [C rspec []], C var [C vsspec []] ], C var [C pendingspec []] ] ], C cons [ C Assign [ C var [C codespec []], C Call [ C extend [], C var [C codespec []], C If [ C var [C opspec []], C var [C vlspec []], C var [C vrspec []], C Call [ C get_label [], C var [C lspec []], C var [C vsspec []] ], C Call [ C get_label [], C var [C rspec []], C var [C vsspec []] ] ] ] ], C nil [] ] ] ], C Goto [ C end_pending_loopspec [] ] ], C cons [ C Block [ C processMatchspec [], C cons [ C Assign [ C var [C v_valspec []], C Call [ C reduce [], C var [C vspec []], C var [C vsspec []] ] ], C nil [] ], C If [ C Eq [], C True [  ], C Call [ C is_static [], C var [C Divisionspec []], C var [C vspec []] ], C processMatchStaticspec [], C processMatchDynamicspec [] ] ], C cons [ C Block [ C processMatchStaticspec [], C nil [], C If [ C Eq [], C Call [ C match_fits [], C var [C v_valspec []], C var [C espec []], C var [C vsspec []] ], C True [  ], C processMatchStaticTruespec [], C processMatchStaticFalsespec [] ] ], C cons [ C Block [ C processMatchStaticTruespec [], C cons [ C Assign [ C var [C vsspec []], C Call [ C match_eval [], C var [C v_valspec []], C var [C espec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C GotoLabspec []], C var [C lspec []] ], C nil [] ] ], C Goto [ C processGotospec [] ] ], C cons [ C Block [ C processMatchStaticFalsespec [], C cons [ C Assign [ C var [C GotoLabspec []], C var [C rspec []] ], C nil [] ], C Goto [ C processGotospec [] ] ], C cons [ C Block [ C processMatchDynamicspec [], C cons [ C Assign [ C var [C pendingspec []], C cons [ C Pair [ C var [C lspec []], C var [C vsspec []] ], C var [C pendingspec []] ] ], C cons [ C Assign [ C var [C pendingspec []], C cons [ C Pair [ C var [C rspec []], C var [C vsspec []] ], C var [C pendingspec []] ] ], C cons [ C Assign [ C var [C codespec []], C Call [ C extend [], C var [C codespec []], C Match [ C var [C v_valspec []], C var [C espec []], C Call [ C get_label [], C var [C lspec []], C var [C vsspec []] ], C Call [ C get_label [], C var [C rspec []], C var [C vsspec []] ] ] ] ], C nil [] ] ] ], C Goto [ C end_pending_loopspec [] ] ], C cons [ C Block [ C processReturnspec [], C cons [ C Assign [ C var [C valspec []], C Call [ C reduce [], C var [C exprspec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C codespec []], C Call [ C extend [], C var [C codespec []], C Return [ C var [C valspec []] ] ] ], C nil [] ] ], C Goto [ C end_pending_loopspec [] ] ], C cons [ C Block [ C loopBB_spec [], C cons [ C Assign [ C var [C assignsspec []], C var [C restAssignsspec []] ], C nil [] ], C Match [ C var [C curAssignspec []], C Assign [ C var [C xspec []], C var [C exprAssspec []] ], C processAssignspec [], C ErrPatternspec [] ] ], C cons [ C Block [ C processAssignspec [], C nil [], C If [ C Eq [], C Call [ C is_static [], C var [C Divisionspec []], C var [C xspec []] ], C True [  ], C processAssign2spec [], C processAssign3spec [] ] ], C cons [ C Block [ C processAssign2spec [], C cons [ C Assign [ C var [C valspec []], C Call [ C reduce [], C var [C exprAssspec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C vsspec []], C Call [ C update [], C var [C vsspec []], C var [C xspec []], C var [C valspec []] ] ], C nil [] ] ], C Goto [ C loopBBspec [] ] ], C cons [ C Block [ C processAssign3spec [], C cons [ C Assign [ C var [C valspec []], C Call [ C reduce [], C var [C exprAssspec []], C var [C vsspec []] ] ], C cons [ C Assign [ C var [C codespec []], C Call [ C extend [], C var [C codespec []], C Assign [ C var [C xspec []], C var [C valspec []] ] ] ], C nil [] ] ], C Goto [ C loopBBspec [] ] ], C cons [ C Block [ C end_pending_loopspec [], C cons [ C Assign [ C var [C NewBlocksspec []], C cons [ C var [C codespec []], C var [C NewBlocksspec []] ] ], C nil [] ], C Goto [ C loopPendingspec [] ] ], C cons [ C Block [ C lookupBlockspec [], C nil [], C Match [ C var [C CurListBlockspec []], C cons [ C var [C CurElemBlockspec []], C var [C CurListTailBlockspec []] ], C lookupBlockCheckspec [], C ErrPatternspec [] ] ], C cons [ C Block [ C lookupBlockCheckspec [], C nil [], C Match [ C var [C CurElemBlockspec []], C Block [ C var [C CurLabspec []], C var [C assignsspec []], C var [C jumpspec []] ], C lookupBlockCheck_spec [], C ErrPatternspec [] ] ], C cons [ C Block [ C lookupBlockCheck_spec [], C nil [], C If [ C Eq [], C var [C CurLabspec []], C var [C CurFindBlockspec []], C lookupBlockReturnspec [], C lookupBlockNextspec [] ] ], C cons [ C Block [ C lookupBlockNextspec [], C cons [ C Assign [ C var [C CurListBlockspec []], C var [C CurListTailBlockspec []] ], C nil [] ], C Goto [ C lookupBlockspec [] ] ], C cons [ C Block [ C lookupBlockReturnspec [], C nil [], C If [ C Eq [], C var [C CurRaBlockspec []], C loopPending3 [  ], C loopPending3spec [], C lookupBlockReturn1spec [] ] ], C cons [ C Block [ C lookupBlockReturn1spec [], C nil [], C If [ C Eq [], C var [C CurRaBlockspec []], C loopBB [  ], C loopBBspec [], C lookupBlockReturn2spec [] ] ], C cons [ C Block [ C lookupBlockReturn2spec [], C nil [], C Goto [ C ErrPatternspec [] ] ], C cons [ C Block [ C lookupspec [], C nil [], C Match [ C var [C CurListspec []], C cons [ C var [C CurElemspec []], C var [C CurListTailspec []] ], C lookupCheckspec [], C lookupFailedspec [] ] ], C cons [ C Block [ C lookupCheckspec [], C nil [], C If [ C Eq [], C var [C CurFindspec []], C var [C CurElemspec []], C lookupSucceedspec [], C lookupNextspec [] ] ], C cons [ C Block [ C lookupNextspec [], C cons [ C Assign [ C var [C CurListspec []], C var [C CurListTailspec []] ], C nil [] ], C Goto [ C lookupspec [] ] ], C cons [ C Block [ C lookupSucceedspec [], C cons [ C Assign [ C var [C foundspec []], C True [  ] ], C nil [] ], C Goto [ C lookupReturnspec [] ] ], C cons [ C Block [ C lookupFailedspec [], C cons [ C Assign [ C var [C foundspec []], C False [  ] ], C nil [] ], C Goto [ C lookupReturnspec [] ] ], C cons [ C Block [ C lookupReturnspec [], C nil [], C If [ C Eq [], C var [C CurRaspec []], C loopPending2_1 [  ], C loopPending2_1spec [], C lookupReturn_spec [] ] ], C cons [ C Block [ C lookupReturn_spec [], C nil [], C Goto [ C ErrPatternspec [] ] ], C cons [ C Block [ C ErrPatternspec [], C nil [], C Return [ C ErrPattern [  ] ] ], C cons [ C Block [ C stopspec [], C nil [], C Return [ C Program [ C var [C NewReadsspec []], C var [C NewBlocksspec []] ] ] ], C nil [] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ]]], C cons [C Pair [C Reads [], C none []], C cons [C Pair [C curRead [], C none []], C cons [C Pair [C ReadsTail [], C none []], C cons [C Pair [C readVar [], C none []], C cons [C Pair [C NewReads [], C none []], C cons [C Pair [C Blocks [], C none []], C cons [C Pair [C CurListBlock [], C none []], C cons [C Pair [C CurRaBlock [], C none []], C cons [C Pair [C jump [], C none []], C cons [C Pair [C assigns [], C none []], C cons [C Pair [C curAssign [], C none []], C cons [C Pair [C restAssigns [], C none []], C cons [C Pair [C GotoLab [], C none []], C cons [C Pair [C op [], C none []], C cons [C Pair [C el [], C none []], C cons [C Pair [C er [], C none []], C cons [C Pair [C l [], C none []], C cons [C Pair [C r [], C none []], C cons [C Pair [C v [], C none []], C cons [C Pair [C e [], C none []], C cons [C Pair [C expr [], C none []], C cons [C Pair [C x [], C none []], C cons [C Pair [C exprAss [], C none []], C cons [C Pair [C CurElemBlocks [], C none []], C cons [C Pair [C CurListTailBlock [], C none []], C cons [C Pair [C CurLab [], C none []], C cons [C Pair [C CurElemBlock [], C none []], C nil []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
